/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <fakemeta>

#define TASK_JET 111222
#define PLUGIN "Hide'N'Seek Train JetPack"
#define VERSION "1.0"
#define AUTHOR "sPuf ?"

new bool:CanUseJet[33];
new HasJetPack[33];

static const JetSpeed[9] = {
	300,
	500,
	700,
	900,
	1200,
	1500,
	1700,
	1900,
	2000
}
new Speed[33];

public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)

	register_clcmd("+jet", "JetPackOn");
	register_clcmd("-jet", "JetPackOff");
	register_clcmd("+hook", "JetPackOn");
	register_clcmd("-hook", "JetPackOff");

	register_clcmd("say /jetmenu","principal");
}
public client_putinserver(id) {
	
	Speed[id] = 3;
	CanUseJet[id] = true;

}
public JetPackOn(id)  {
	
	if( HasJetPack[id] || !CanUseJet[id] || !is_user_alive(id)) {
		return PLUGIN_HANDLED;
	}
	if(CanUseJet[id]) {
		HasJetPack[id] = true;
		set_task(0.1,"Jet_Prethink",id+TASK_JET,"",0,"b");
	
		Jet_Prethink(id+TASK_JET);
	}
	return PLUGIN_HANDLED;
}
public JetPackOff(id)  {
	
	HasJetPack[id] = false;
	
	return PLUGIN_HANDLED;
}
public Jet_Prethink(id) {
	
	id -= TASK_JET;
	
	if(!HasJetPack[id] || !is_user_alive(id))
	{
		remove_task(id+TASK_JET);
		return PLUGIN_HANDLED;
	}
	
	
	if(HasJetPack[id]) {
		
		
		static Float:fVelocity[3], Float:fsVelocity[3];
		velocity_by_aim(id, JetSpeed[Speed[id]], fsVelocity);
			
		fVelocity[0] = fsVelocity[0];
		fVelocity[1] = fsVelocity[1];
		fVelocity[2] = fsVelocity[2];
		
		set_pev(id, pev_velocity, fVelocity);
		
		set_pev(id, pev_gaitsequence, 8);
		
	}	
	return PLUGIN_CONTINUE;
}
public principal(id)
{
	new msgjet[64];
	
	formatex(msgjet, 63, "\rJetPack \w- %s", CanUseJet[id] ?"\dON" : "\yOFF");
	
	new menujet = menu_create(msgjet, "principal_handler", 0);
	
	new msgoption[64];
	formatex(msgoption, 63, "\wSpeed \yActual Speed: %d.0", JetSpeed[Speed[id]]);

	menu_additem(menujet, msgoption, "1", 0);
	
	menu_display(id, menujet, 0);
	
	return PLUGIN_HANDLED
}

public principal_handler(id, menu, item)
{
	if(item == MENU_EXIT) {
		return PLUGIN_HANDLED;
	}
	
	new data[6], iName[64];
	new access, callback;
	menu_item_getinfo(menu, item, access, data,5, iName, 63, callback);
	
	new key = str_to_num(data);
	
	switch(key)
	{
		case 1:
		{
			if( ++Speed[id] >= 9 ) {
				Speed[id] = 0;
			}
			principal(id);
		}
	}
	return PLUGIN_HANDLED;
}