/* Plugin generated by AMXX-Studio */

#include <amxmodx>

#define PLUGIN "Furien : HeartBeat"
#define VERSION "1.0"

new const g_szHeartBeat[]  =  "misc/fmu_heartbeat.wav";
	
new g_iCvarHeartBeatTo;
new g_iCvarMinHealth;

public plugin_precache( )	precache_sound( g_szHeartBeat );

public plugin_init( )
{
	register_plugin( PLUGIN, VERSION, "Askhanar" );
	
	g_iCvarHeartBeatTo = register_cvar( "fmu_hb_enableto", "3" );
	g_iCvarMinHealth = register_cvar( "fmu_hb_minhp", "30" );
	
	set_task( 1.0, "task_HeartBeat", _, _, _, "b", 0 );
}

public task_HeartBeat( )
{
	static iHeartBeat;
	iHeartBeat = get_pcvar_num( g_iCvarHeartBeatTo );
	
	if( iHeartBeat == 0 )
		return PLUGIN_CONTINUE;
		
	static iPlayers[ 32 ];
	static iPlayersNum;
	
	if( iHeartBeat == 1 )
		get_players( iPlayers, iPlayersNum, "aceh", "TERRORIST" );
	else if( iHeartBeat == 2 )
		get_players( iPlayers, iPlayersNum, "aceh", "CT" );
	else if( iHeartBeat == 3 )
		get_players( iPlayers, iPlayersNum, "ach" );
		
	/*No players found.*/
	if( !iPlayersNum )
		return PLUGIN_CONTINUE;
	
	static id, i;
	for( i = 0; i < iPlayersNum; i++ )
	{
		id = iPlayers[ i ];
		
		static iUserHealth, iMinHealth;
		iUserHealth =  get_user_health( id );
		iMinHealth = get_pcvar_num( g_iCvarMinHealth );
		
		if( iUserHealth <= iMinHealth )
		{
			ShakeScreen( id, 0.8 );
			FadeScreen( id , 0.6, 230, 0, 0, 50 );
			emit_sound( id, CHAN_STATIC, g_szHeartBeat, 0.2, ATTN_IDLE, 0, PITCH_NORM  );
		}
	}	
	return PLUGIN_CONTINUE;
}

ShakeScreen( id, const Float:seconds  )
{
	message_begin(  MSG_ONE,  get_user_msgid( "ScreenShake" ),  { 0, 0, 0 }, id );
	write_short(  floatround( 4096.0 * seconds, floatround_round ) );
	write_short(  floatround( 4096.0 * seconds, floatround_round ) );
	write_short(  1<<13  );
	message_end(  );
}

FadeScreen(  id, const Float:seconds,  const red,  const green,  const blue,  const alpha  )
{      
	message_begin(  MSG_ONE, get_user_msgid( "ScreenFade" ), _, id );
	write_short(  floatround( 4096.0 * seconds, floatround_round )  );
	write_short(  floatround( 4096.0 * seconds, floatround_round )  );
	write_short( 0x0000 );
	write_byte(  red  );
	write_byte(  green  );
	write_byte(  blue  );
	write_byte(  alpha  );
	message_end(  );
}